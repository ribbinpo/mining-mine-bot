name: cicd

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Enter version to build e.g. (latest, 1.0.0):"
        required: true
        default: "latest"

jobs:
  build_and_publish:
    runs-on: ubuntu-latest

    steps:
      - name: checkout branch
        uses: actions/checkout@v4
      - name: build image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mining-mine-bot:${{ github.event.inputs.version }} .
      - name: tag image
        run: docker tag ${{ secrets.DOCKERHUB_USERNAME }}/mining-mine-bot:${{ github.event.inputs.version }} ${{ secrets.DOCKERHUB_USERNAME }}/mining-mine-bot:latest
      - name: docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: publish image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mining-mine-bot:${{ github.event.inputs.version }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mining-mine-bot:latest
  deploy:
    needs: build_and_publish
    runs-on: [self-hosted, mining-mine-bot]

    environment: dev

    env:
      PORT: ${{ secrets.PORT }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}

    steps:
      - name: checkout branch
        uses: actions/checkout@v4
      - name: docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: pull image
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mining-mine-bot:latest
      - name: create .env file
        run: |
          cat << EOF > .env
          PORT=${PORT}
          DB_HOST=${DB_HOST}
          DB_USER=${DB_USER}
          DB_PASSWORD=${DB_PASSWORD}
          DB_NAME=${DB_NAME}
          DB_PORT=${DB_PORT}
          EOF
          echo ".env is created successfully!"
      - name: run container
        run: |
          docker run -d \
            --name mining-mine-bot \
            --restart always \
            -p ${PORT:-4000}:${PORT:-4000} \
            --env-file .env \
            -e DB_HOST=db \
            --network mining-mine-network \
            --network-alias mining-mine-bot \
            ${{ secrets.DOCKERHUB_USERNAME }}/mining-mine-bot:latest
      - name: Remove unused images
        run: |
          docker image prune -f
